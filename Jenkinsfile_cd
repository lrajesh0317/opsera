pipeline {
  agent { label 'k8s-master' }

  environment {
    KUBECONFIG_ID = 'kubeconfig-single'   // Jenkins Secret File with kubeconfig
    RELEASE       = 'hello'               // Helm release name
    NAMESPACE     = 'hello'               // Existing Kubernetes namespace
    CHART_PATH    = 'hello-chart'         // Path to chart in workspace
  }

  stages {
    stage('Helm Deploy') {
      steps {
        withCredentials([file(credentialsId: env.KUBECONFIG_ID, variable: 'KCFG')]) {
          sh '''
            set -e
            export KUBECONFIG="$KCFG"

            # Deploy/upgrade using prebuilt image
            helm upgrade --install ${RELEASE} ${CHART_PATH} \
              --namespace ${NAMESPACE} \
              --set image.repository="${NEXUS_HOST}:${NEXUS_PORT}/${NEXUS_REPO}/${IMAGE_NAME}" \
              --set image.tag="${IMAGE_TAG}" \
              --wait --timeout 5m

            # Verify rollout and show resources
            kubectl -n ${NAMESPACE} rollout status deploy/${RELEASE} --timeout=120s
            kubectl -n ${NAMESPACE} get deploy,po,svc -o wide
          '''
        }
      }
    }
  }

  post {
    success {
      echo "Deployed ${params.NEXUS_HOST}:${params.NEXUS_PORT}/${params.NEXUS_REPO}/${params.IMAGE_NAME}:${params.IMAGE_TAG} to namespace ${env.NAMESPACE}"
    }
    failure {
      echo  "Helm deploy failed (release: ${env.RELEASE})"
    }
  }
}
